{"version":3,"sources":["APIs/apikey.js","Components/SearchVideo.js","Components/Player.js","Components/Info.js","App.js","index.js","assets/images/youtube.svg","assets/images/eye.svg","assets/images/like.svg","assets/images/dislike.svg"],"names":["gapi","window","SearchVideoInput","React","forwardRef","children","value","onChangeContent","onResetContent","onSearchVideo","ref","Form","onSubmit","InputGroup","Control","type","placeholder","onChange","Button","variant","onClick","SearchVideoResults","props","Dropdown","Menu","className","results","map","item","Item","key","id","e","onSetVideo","Card","Row","Col","sm","Img","src","thumbnails","Body","Title","str","title","DOMParser","parseFromString","firstChild","childNodes","innerText","Text","channelTitle","SearchVideo","useState","content","setContent","setResults","showResults","setShowResults","useEffect","load","client","init","apiKey","apikey","then","show","drop","Toggle","as","target","preventDefault","youtube","search","list","part","maxResults","q","reponsive","items","JSON","parse","body","videoId","snippet","high","url","err","console","error","getVideoID","Player","playerEl","useRef","playerHeight","setPlayerHeight","changePlayerHeight","width","current","offsetWidth","addEventListener","style","height","videoID","opts","xs","Image","youtubeImage","fluid","Info","eyeImage","videoInfo","viewCount","likeImage","likeCount","dislikeImage","dislikeCount","App","setVideoID","setVideoInfo","URL","getJSON","res","statistics","toString","replace","Container","rootElement","document","getElementById","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.de38987d.chunk.js","sourcesContent":["export default {\r\n  key: \"AIzaSyAIURFOQjche4dw4NcvVhVdEm1zaPOkl6E\"\r\n};\r\n","// Import APIs\r\nimport apikey from \"../APIs/apikey\";\r\n\r\n// Import React\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  Dropdown,\r\n  Row,\r\n  Col,\r\n  Card\r\n} from \"react-bootstrap\";\r\n\r\n// Import plugins\r\nimport { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\n\r\nconst gapi = window.gapi;\r\n\r\nconst SearchVideoInput = React.forwardRef(\r\n  (\r\n    { children, value, onChangeContent, onResetContent, onSearchVideo },\r\n    ref\r\n  ) => (\r\n    <Form onSubmit={onSearchVideo}>\r\n      <InputGroup>\r\n        <Form.Control\r\n          type=\"text\"\r\n          value={value}\r\n          placeholder={children}\r\n          ref={ref}\r\n          onChange={onChangeContent}\r\n        />\r\n        <Button variant=\"danger\" onClick={onResetContent}>\r\n          Xóa\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={onSearchVideo}>\r\n          Tìm kiếm\r\n        </Button>\r\n      </InputGroup>\r\n    </Form>\r\n  )\r\n);\r\n\r\nconst SearchVideoResults = (props) => {\r\n  const convertHTMLString = (str) => {\r\n    let doc = new DOMParser().parseFromString(str, \"text/html\");\r\n    return doc.firstChild.childNodes[1].innerText;\r\n  };\r\n\r\n  return (\r\n    <Dropdown.Menu>\r\n      <OverlayScrollbarsComponent className=\"dropdown-scroll\">\r\n        {props.results.map((item) => (\r\n          <Dropdown.Item\r\n            key={item.id}\r\n            onClick={(e) => props.onSetVideo(e, item.id)}\r\n          >\r\n            <Card>\r\n              <Row>\r\n                <Col sm={2}>\r\n                  <Card.Img src={item.thumbnails} />\r\n                </Col>\r\n                <Col sm={10}>\r\n                  <Card.Body>\r\n                    <Card.Title>{convertHTMLString(item.title)}</Card.Title>\r\n                    <Card.Text>\r\n                      <span className=\"text-muted\">{item.channelTitle}</span>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Dropdown.Item>\r\n        ))}\r\n      </OverlayScrollbarsComponent>\r\n    </Dropdown.Menu>\r\n  );\r\n};\r\n\r\nconst SearchVideo = (props) => {\r\n  const [content, setContent] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n  const [showResults, setShowResults] = useState(false);\r\n\r\n  useEffect(() => {\r\n    gapi.load(\"client\", () => {\r\n      gapi.client\r\n        .init({\r\n          apiKey: apikey.key\r\n        })\r\n        .then(() => {\r\n          gapi.client.load(\r\n            \"https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest\"\r\n          );\r\n        });\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (content === \"\") {\r\n      setShowResults(false);\r\n    }\r\n  }, [content]);\r\n\r\n  const onSearchVideo = (e) => {\r\n    e.preventDefault();\r\n    if (content !== \"\") {\r\n      gapi.client.youtube.search\r\n        .list({\r\n          part: [\"snippet\"],\r\n          maxResults: 10,\r\n          q: content\r\n        })\r\n        .then(\r\n          (reponsive) => {\r\n            const body = JSON.parse(reponsive.body);\r\n            const items = body.items.map((item) => ({\r\n              id: item.id.videoId,\r\n              title: item.snippet.title,\r\n              channelTitle: item.snippet.channelTitle,\r\n              thumbnails: item.snippet.thumbnails.high.url\r\n            }));\r\n            setResults(items);\r\n            setShowResults(true);\r\n          },\r\n          (err) => {\r\n            console.error(\"Excute error\", err);\r\n          }\r\n        );\r\n    }\r\n  };\r\n\r\n  const onSetVideo = (e, id) => {\r\n    e.preventDefault();\r\n    setContent(\"\");\r\n    props.getVideoID(id);\r\n  };\r\n\r\n  return (\r\n    <Dropdown show={showResults} drop=\"up\" className=\"App-SearchVideo\">\r\n      <Dropdown.Toggle\r\n        as={SearchVideoInput}\r\n        value={content}\r\n        onChangeContent={(e) => setContent(e.target.value)}\r\n        onResetContent={() => setContent(\"\")}\r\n        onSearchVideo={onSearchVideo}\r\n      >\r\n        Gõ video bạn muốn...\r\n      </Dropdown.Toggle>\r\n      <SearchVideoResults\r\n        results={results}\r\n        onSetVideo={onSetVideo}\r\n      ></SearchVideoResults>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default SearchVideo;\r\n","// Import React\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\n\r\n// Import plugins\r\nimport YouTube from \"react-youtube\";\r\n\r\n// Import assets\r\nimport youtubeImage from \"../assets/images/youtube.svg\";\r\n\r\nconst Player = (props) => {\r\n  const playerEl = useRef(null);\r\n\r\n  const [playerHeight, setPlayerHeight] = useState(0);\r\n\r\n  const changePlayerHeight = (width) => {\r\n    setPlayerHeight((width * 9) / 16);\r\n  };\r\n\r\n  useEffect(() => {\r\n    changePlayerHeight(playerEl.current.offsetWidth);\r\n    window.addEventListener(\"resize\", () => {\r\n      changePlayerHeight(playerEl.current.offsetWidth);\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className=\"App-Player\">\r\n      <div\r\n        className=\"App-Player-Inner\"\r\n        ref={playerEl}\r\n        style={{ height: playerHeight }}\r\n      >\r\n        {props.videoID !== \"\" ? (\r\n          <YouTube\r\n            videoId={props.videoID}\r\n            opts={{\r\n              height: playerHeight\r\n            }}\r\n          />\r\n        ) : (\r\n          <Row>\r\n            <Col sm={3} xs={6}>\r\n              <Image src={youtubeImage} fluid />\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","// Import React\r\nimport React from \"react\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\n\r\n// Import assets\r\nimport eyeImage from \"../assets/images/eye.svg\";\r\nimport likeImage from \"../assets/images/like.svg\";\r\nimport dislikeImage from \"../assets/images/dislike.svg\";\r\n\r\nconst Info = (props) => {\r\n  return (\r\n    <Row className=\"App-Info mt-4\">\r\n      <Col\r\n        sm={4}\r\n        className=\"d-flex align-items-center justify-content-center mb-3\"\r\n      >\r\n        <Image src={eyeImage} className=\"me-3\" />\r\n        <span className=\"fs-2\">{props.videoInfo.viewCount}</span>\r\n      </Col>\r\n      <Col\r\n        sm={4}\r\n        className=\"d-flex align-items-center justify-content-center mb-3\"\r\n      >\r\n        <Image src={likeImage} className=\"me-3\" />\r\n        <span className=\"fs-2\">{props.videoInfo.likeCount}</span>\r\n      </Col>\r\n      <Col\r\n        sm={4}\r\n        className=\"d-flex align-items-center justify-content-center mb-3\"\r\n      >\r\n        <Image src={dislikeImage} className=\"me-3\" />\r\n        <span className=\"fs-2\">{props.videoInfo.dislikeCount}</span>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","// Import APIs\nimport apikey from \"./APIs/apikey\";\n\n// Import React\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\n// Import plugins\nimport getJSON from \"get-json\";\n\n// Import components\nimport SearchVideo from \"./Components/SearchVideo\";\nimport Player from \"./Components/Player\";\nimport Info from \"./Components/Info\";\n\n// Import styles\nimport \"./styles.scss\";\n\nconst App = () => {\n  const [videoID, setVideoID] = useState(\"\");\n  const [videoInfo, setVideoInfo] = useState({\n    viewCount: 0,\n    likeCount: 0,\n    dislikeCount: 0\n  });\n\n  useEffect(() => {\n    if (videoID !== \"\") {\n      let URL = `https://www.googleapis.com/youtube/v3/videos?id=${videoID}&key=${apikey.key}&fields=items(id,snippet(channelId,title,categoryId),statistics)&part=snippet,statistics`;\n      getJSON(URL, (err, res) => {\n        setVideoInfo({\n          viewCount: res.items[0].statistics.viewCount\n            .toString()\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n          likeCount: res.items[0].statistics.likeCount\n            .toString()\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n          dislikeCount: res.items[0].statistics.dislikeCount\n            .toString()\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n        });\n      });\n    }\n  });\n\n  const getVideoID = (id) => {\n    setVideoID(id);\n  };\n\n  return (\n    <div className=\"App py-4\">\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Col sm={9}>\n            <Player videoID={videoID}></Player>\n          </Col>\n        </Row>\n        <Info videoInfo={videoInfo}></Info>\n      </Container>\n      <Container className=\"align-self-end\">\n        <Row>\n          <Col>\n            <SearchVideo getVideoID={getVideoID}></SearchVideo>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n","module.exports = __webpack_public_path__ + \"static/media/youtube.0f86b659.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye.8d4823ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/like.0b0a8948.svg\";","module.exports = __webpack_public_path__ + \"static/media/dislike.f07d3052.svg\";"],"sourceRoot":""}